  var loadedTime = new Date();
  
  handle_history_events = function(event){
    var left_side_text = $('#left_side_text').val();
    var right_side_text = $('#right_side_text').val();

    // This only takes effect if the page is loaded from back or forward buttons
    if(left_side_text && left_side_text != "blank_history" && left_side_text != $('.leftside').html()){
      $('.leftside').html(left_side_text)
    }
    if(right_side_text && right_side_text != "blank_history" && right_side_text != $('.rightside').html()){
      $('.rightside').html(right_side_text)
    }
  } 
  
  handle_history_events();

  on_idea_submit_button_click = function(event){		
    var new_idea = $('#facebox .new_idea_field').val();
    var default_text = $('#default_text').val()
    $('#facebox .new_idea_counter').hide();
    $('.example_notice').hide();
    
    //if new idea is blank or longer than 140 characters, do not allow it to submit
    if ((new_idea == 'Add your own idea here...') || (new_idea == '') || new_idea == default_text) {
        event.returnValue = false;
	alert('<%=t('vote.submit_idea_default_error') %>');
        return false;
    }
    if (new_idea.length > 140) {
        alert('<%=t('vote.submit_idea_too_long_error') %>');
        event.returnValue = false;
        return false;
    }
		
    $('.tellmearea').html('');
    $('.indicator').show();
    $('#facebox .border-thick').hide();
    $('#facebox .new_idea_field').hide();
    $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  { 
        backgroundColor: '#000', 
        opacity:         0.0
     }});
    
    var question_id = $(this).attr("rel");

		
    $.post('/questions/' + question_id + '/add_idea.js' + '?locale=<%= I18n.locale %>',
        {authenticity_token : AUTH_TOKEN, new_idea: new_idea},
        function(data){
          $.unblockUI();
          leveling_text = "";
          if(data["leveling_message"] != "")
		leveling_text = " <br /> " + data["leveling_message"];
    var results_text = '';
    <%- if @question.user_can_view_results?(current_user, @earl) -%>
    results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
    <%- end -%>
	  $('.tellmearea').html(data["message"] + leveling_text + results_text).effect("highlight", {}, 1500);
          $('#new_idea_field').val("");
          $('.indicator').hide();
        
          if (data['choice_status'] == 'active') {
            current_item_count = $('#item_count').html();
            $('#item_count').html(increment(current_item_count));
	    $.facebox.close();
          }
	  else{
            $('<p> <%= t('vote.idea_sent_for_review') %> </p>').insertBefore('#facebox .new_idea_field');
            $('#facebox .new_idea_submit').html('<%= t('vote.cast_votes') %>');
            $('#facebox .new_idea_submit').unbind('click');
            $('#facebox .new_idea_submit').bind('click', $.facebox.close);
          }

        },
        "json"
      );
      return false;
    };

    $('.vote_cell').bind('click',function(event){

        var currentTime = new Date();
	var time_viewed = currentTime - loadedTime


	$('.example_notice').hide();

	// TODO refactor to use url_for in rails
	var the_id = $(this).attr("id");
	var the_locale = "<%= I18n.locale %>"

	var winner_side = (the_id == "left_choice_cell") ? "left" : "right";
	var loser_side = (the_id == "left_choice_cell") ? "right" : "left";

	var question_id = $(this).attr("rel");

	var loser_link = $('a#' + loser_side + 'side');
	var winner_link = $('a#' + winner_side + 'side');

	var loser_url = "/" + loser_link.attr("question_slug") + "/choices/" + loser_link.attr("choice_id");
        var winner_url=  "/" + winner_link.attr("question_slug") + "/choices/" + winner_link.attr("choice_id");
	

	if(the_locale != 'en'){
	  loser_url += '?locale=' + the_locale;
	  winner_url += '?locale=' + the_locale;
	}
	  

	var loser = "<a href='" + loser_url +  "'>" + loser_link.html() + "</a>";
	var winner = "<a href='" + winner_url + "'>" + winner_link.html() + "</a>";	
		
	var prompt_id = $('#prompt_id').val()
	var appearance_lookup = $('#appearance_lookup').val()
	$.ajax({
	   type: "post",
	   url: '/questions/' + question_id + '/prompts/' + prompt_id + '/vote.js' + '?locale=' + the_locale,
	   dataType: "json",
	   data: {
		 'authenticity_token' : AUTH_TOKEN,
		 'time_viewed' : time_viewed,
		 'prompt_id': prompt_id,
		 'appearance_lookup': appearance_lookup,
		 'direction' : winner_side
		 },
	   beforeSend: function() {
	       $('.tellmearea').html('');
	       $('.indicator').show();
	       $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  { 
	               backgroundColor: '#000', 
		       opacity:         0.0
	       }});
	   },
	   timeout: 10000,
	   error: function(request,error) {
		     $.unblockUI();
		     $('.indicator').hide();
		     if (error == "timeout") {
		       $('.tellmearea').html('<%= t('vote.vote_timeout_error')%>').effect("highlight", {color: '#ff0000'}, 1500);
		     }
		     else {
		       $('.tellmearea').html("<%= t('vote.vote_other_error') %>").effect("highlight", {color: '#ff0000'}, 1500);
		     }

		     loadedTime = new Date(); //reset loaded time

	   },
	   success: function(data){
		$.unblockUI();
		$('.indicator').hide();
		$('.leftside').html(data["newleft"]);
		$('.rightside').html(data["newright"]);
		
		//used for fraud detection / back button behavior fixing
		$('#left_side_text').val(data["newleft"]);
		$('#right_side_text').val(data["newright"]);

		$('#prompt_id').val(data["prompt_id"]);
		$('#appearance_lookup').val(data["appearance_lookup"]);
		
		leveling_text = "";
		if(data["leveling_message"] != "")
		     leveling_text = " <br /> " + data["leveling_message"];

		     if(SHOW_AVERAGE_VOTES == "with_average")
		        leveling_text += " " + $('#average_votes').html()
    var results_text = '';
    <%- if @question.user_can_view_results?(current_user, @earl) -%>
    results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
    <%- end -%>
		        
		$('.tellmearea').html("<%= t('vote.you_chose_winner_over_loser', :winner => '%winner%', :loser => '%loser%')%>".replace('%winner%',  winner).replace('%loser%', loser) + leveling_text + results_text).effect("highlight", {}, 1500);
		current_vote_count = $('#votes_count').html();
		$('#votes_count').html(increment(current_vote_count));
		$(".votebox tr.prompt td.idea").each(function(el) {
		      $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
			        $(this).css("background", "#3198c1");
			        $(this).css("border-left", "1px solid #3198c1");
			        $(this).css("border-right", "1px solid #3198c1");
					    $(this).bind("mouseover", function() {
					      $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
					        $(this).css("background", "#2b88ad");
					        $(this).css("border-left", "1px solid #2b88ad");
					        $(this).css("border-right", "1px solid #2b88ad");
					      });
					    });
					    $(this).bind("mouseout", function() {
					      $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
					        $(this).css("background", "#3198c1");
					        $(this).css("border-left", "1px solid #3198c1");
					        $(this).css("border-right", "1px solid #3198c1");
					      });
					    });
				    });
				});

		                loadedTime = new Date() //reset loaded time
		}// End success
	     }); // End ajax method
	  return false;
	});
 
    $(document).bind('reveal.facebox', function() { 

    if($('#facebox .content').hasClass('wider')){
    $('#facebox .footer').hide();
    $('#facebox .close').click($.facebox.close)
    }

   // if popup is for add_idea_submit 
      $('#facebox .new_idea_submit').bind('click', on_idea_submit_button_click);
      $('#facebox .new_idea_field').hint();
      $('#facebox .new_idea_field').jqEasyCounter({target: '#facebox .new_idea_counter'});

    //if popup is for cant_decide_submit
    $('.cd_box a').click(function(event) {
        event.preventDefault();
    
        var reason = $(event.currentTarget).attr('href').replace(/^#*/, '');

	      jQuery(document).trigger('close.facebox')
	
	var currentTime = new Date();
	var time_viewed = currentTime - loadedTime
	$('.example_notice').hide();
	//$.setFragment({ "page" : $.queryString(this.href).page });
	$('.tellmearea').html('');
	$('.indicator').show();
	var prompt_id = $('#prompt_id').val()
	var appearance_lookup = $('#appearance_lookup').val()
	$.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  { 
		        backgroundColor: '#000', 
		        opacity:         0.0
		   }});
	var question_id = $(event.currentTarget).attr("data-questionid");
	$.post('/questions/' + question_id + '/prompts/' + prompt_id + '/skip.js' + '?locale=<%= I18n.locale %>',
	       {
		   'authenticity_token' : AUTH_TOKEN,
		   'cant_decide_reason' : reason, 
		   'time_viewed' : time_viewed,
		   'appearance_lookup': appearance_lookup
		},

		function(data){
		        leveling_text = "";
		        if(data["leveling_message"] != "")
		           leveling_text = " <br /> " + data["leveling_message"];
		        
			if(SHOW_AVERAGE_VOTES == "with_average")
		           leveling_text += " " + $('#average_votes').html()
    var results_text = '';
    <%- if @question.user_can_view_results?(current_user, @earl) -%>
    results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
    <%- end -%>
			feedback = data["message"] + leveling_text + results_text;

		        $('.tellmearea').html(feedback).effect("highlight", {}, 1500);
			$('.indicator').hide();
			$.unblockUI();
			$('.leftside').html(data["newleft"]);
			$('.rightside').html(data["newright"]);
		       
			//used for fraud detection / back button behavior fixing
		        $('#left_side_text').val(data["newleft"]);
		        $('#right_side_text').val(data["newright"]);

		        $('#prompt_id').val(data["prompt_id"]);
		        $('#appearance_lookup').val(data["appearance_lookup"]);
	                //clear the radio buttons somehow?
		        loadedTime = new Date() //reset loaded time
			
		},
		"json"
		);
	});
    });


    $('.flag_link').bind("click", function(event){
       event.stopPropagation();
       event.preventDefault();
       $.facebox($("#flag_inappropriate").html());
       $('#facebox .footer').hide();
       $('#facebox .close').click($.facebox.close)

       var flag_side = $(this).attr('id');

       $('.flag_submit_button').bind("click", function(event){
           event.stopPropagation();
           user_text = null;
	   user_text = $('#facebox textarea').val();
	   if(!user_text){
	      alert("You must include an explanation");
	      return false;
	   }
	   jQuery(document).trigger('close.facebox')
	
	   var currentTime = new Date();
	   var time_viewed = currentTime - loadedTime
	   $('.example_notice').hide();
	   $('.tellmearea').html('');
	   $('.indicator').show();
	   var prompt_id = $('#prompt_id').val();

	   var appearance_lookup = $('#appearance_lookup').val();
	   $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  { 
		        backgroundColor: '#000', 
		        opacity:         0.0
		   }});
	   var question_id = $(this).attr("rel");
	   $.post('/questions/' + question_id + '/prompts/' + prompt_id + '/flag.js'+ '?locale=<%= I18n.locale %>', 
	       {
	       'authenticity_token' : AUTH_TOKEN,
	       'flag_reason' : user_text,
		'time_viewed' : time_viewed,
		'side': flag_side,
		'appearance_lookup': appearance_lookup
		},

		function(data){
		        if(data["error"]){
				window.location.replace(data["redirect"]);
		        }
			else{
		             leveling_text = "";
		             if(data["leveling_message"] != "")
		                    leveling_text = " <br /> " + data["leveling_message"];
			     if(SHOW_AVERAGE_VOTES == "with_average")
		                    leveling_text += " " + $('#average_votes').html()
    var results_text = '';
    <%- if @question.user_can_view_results?(current_user, @earl) -%>
    results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
    <%- end -%>
			     $('.tellmearea').html(data["message"] + leveling_text + results_text).effect("highlight", {}, 1500);
			     $('.indicator').hide();
			     $.unblockUI();
			     $('.leftside').html(data["newleft"]);
			     $('.rightside').html(data["newright"]);
		            
			     //used for fraud detection / back button behavior fixing
		             $('#left_side_text').val(data["newleft"]);
		             $('#right_side_text').val(data["newright"]);

			     $('#prompt_id').val(data["prompt_id"]);
			     $('#appearance_lookup').val(data["appearance_lookup"]);
			     current_item_count = $('#item_count').html();
			     $('#item_count').html(decrement(current_item_count));
			     loadedTime = new Date() //reset loaded time
			}
			
		},
		"json"
		);
		return false;
	});
    });

